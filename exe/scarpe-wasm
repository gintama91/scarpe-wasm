#!/usr/bin/env ruby

# First we need to load Scarpe-Components and Lacci, which means figuring out where from.

# --dev option applies to all actions
use_dev = ARGV.delete("--dev") ? true : false
use_debug = ARGV.delete("--debug") ? true : false

# Default to local webview display if not otherwise given
ENV['SCARPE_DISPLAY'] ||= 'wasm_local'

if use_debug
  ENV['SCARPE_DEBUG'] = 'true'
end
if use_dev
  dev_path = File.expand_path("../lib", __dir__)
  $LOAD_PATH.prepend dev_path

  require 'bundler/setup'
  #Bundler.require(:default)
end

require "scarpe/wasm/packaging"
require "scarpe/wasm/http_server"
require "scarpe/components/version"

require "shoes"
require "lacci/scarpe_cli"

include Scarpe::CLI

# We need to not use syntactic features of very recent Rubies in this file, so that it parses
# correctly in earlier Rubies and can successfully give the version-check error.
version_check

def print_usage
  puts <<~'USAGE'
    Usage: scarpe-wasm [OPTIONS] <scarpe app file>            # Same as "scarpe run"
           scarpe-wasm [OPTIONS] run <scarpe app file>
           scarpe-wasm [OPTIONS] src-package <scarpe app dir> # package a dir with src and Gemfile inside
           scarpe-wasm [OPTIONS] env                          # print Scarpe environment settings
           scarpe-wasm -v                                     # print the Scarpe gem version and exit
      Options:
          --dev                          Use development local scarpe, not an installed gem
          --debug                        Turn on application debug mode
  USAGE
end

add_env_categories("Scarpe::Wasm" => [
  #env_or_default("SCARPE_TEST_CONTROL", "(none)"),
])

verb = "run"
verb_target = nil

case ARGV[0]
when "-v"
  # This will be fine, pass it through.
  verb = "-v"
when "env"
  if ARGV.length != 1
    print_usage
    exit -1
  end

  verb = "env"
when "src-package"
  if ARGV.length != 2
    print_usage
    exit -1
  end
  verb = ARGV[0]
  verb_target = ARGV[1]
when "run"
  if ARGV.length != 2
    print_usage
    exit -1
  end
  verb_target = ARGV[1]
else
  # Default to run
  if ARGV.length != 1
    print_usage
    exit -1
  end
  verb_target = ARGV[0]
end

case verb
when "-v"
  puts "Scarpe-Wasm #{Scarpe::Wasm::VERSION}"
  puts "Scarpe-Components #{Scarpe::Components::VERSION}"
  puts "Lacci #{Lacci::VERSION}"
when "src-package"
  p = Scarpe::Wasm::Packaging::Package.new app_dir: verb_target
  p.build
  puts "Built Wasm package, installed to #{p.install_dir}."
when "run"
  unless File.exist?(verb_target)
    raise "Can't find file: #{verb_target.inspect}!"
  end
  Scarpe::Wasm::Packaging.ensure_default_build
  pkg = Scarpe::Wasm::Packaging.default_package
  index_name = pkg.build_app_index(verb_target)
  index_url = "http://localhost:8080/#{index_name}"
  puts "URL: #{index_url}"
  system("open -a \"Google Chrome\" #{index_url}")
  Scarpe::Wasm::HTTPServer.new(dir: pkg.install_dir, port: 8080).start
when "env"
  print_env
else
  raise "Internal error! Unknown ./exe/scarpe verb!"
end
